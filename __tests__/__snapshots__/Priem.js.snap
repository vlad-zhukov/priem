// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should have a \`refresh\` method 1`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should have a \`refresh\` method 2`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": true,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should have a \`refresh\` method 3`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should not keep data after the unmount if \`persist: false\` 1`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should not keep data after the unmount if \`persist: false\` 2`] = `
Object {
  "fulfilled": false,
  "pending": true,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": null,
}
`;

exports[`should not keep data after the unmount if \`persist: false\` 3`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should pass a \`refresh\` method as a property into every AsyncContainer render prop 1`] = `
Array [
  Object {
    "fulfilled": false,
    "pending": true,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": null,
  },
  Object {
    "fulfilled": false,
    "pending": true,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": null,
  },
  Object {
    "value": "baz",
  },
]
`;

exports[`should pass a \`refresh\` method as a property into every AsyncContainer render prop 2`] = `
Array [
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": "foo",
  },
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": "bar",
  },
  Object {
    "value": "baz",
  },
]
`;

exports[`should pass a \`refresh\` method as a property into every AsyncContainer render prop 3`] = `
Array [
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": "foo",
  },
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": true,
    "rejected": false,
    "value": "bar",
  },
  Object {
    "value": "baz",
  },
]
`;

exports[`should pass a \`refresh\` method as a property into every AsyncContainer render prop 4`] = `
Array [
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": "foo",
  },
  Object {
    "fulfilled": true,
    "pending": false,
    "reason": null,
    "refresh": [Function],
    "refreshing": false,
    "rejected": false,
    "value": "bar",
  },
  Object {
    "value": "baz",
  },
]
`;

exports[`should pass a \`refresh\` method as a render prop 1`] = `
Object {
  "fulfilled": false,
  "pending": true,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": null,
}
`;

exports[`should pass a \`refresh\` method as a render prop 2`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should pass a \`refresh\` method as a render prop 3`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": true,
  "rejected": false,
  "value": "foo",
}
`;

exports[`should pass a \`refresh\` method as a render prop 4`] = `
Object {
  "fulfilled": false,
  "pending": false,
  "reason": "error!",
  "refresh": [Function],
  "refreshing": false,
  "rejected": true,
  "value": null,
}
`;

exports[`should render a nested component 1`] = `"<div>2-foobar<button type=\\"button\\"></button></div>"`;

exports[`should render a nested component 2`] = `
Object {
  "unique-key-1": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-1",
    },
    "state": Object {
      "counter": 2,
    },
  },
  "unique-key-2": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-2",
    },
    "state": Object {
      "fulfilled": true,
      "pending": false,
      "reason": null,
      "refresh": [Function],
      "refreshing": false,
      "rejected": false,
      "value": "2-foo",
    },
  },
  "unique-key-3": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-3",
    },
    "state": Object {
      "fulfilled": true,
      "pending": false,
      "reason": null,
      "refresh": [Function],
      "refreshing": false,
      "rejected": false,
      "value": "2-foobar",
    },
  },
}
`;

exports[`should render a nested component 3`] = `"<div>2-foobar<button type=\\"button\\"></button></div>"`;

exports[`should render a nested component 4`] = `
Object {
  "unique-key-1": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-1",
    },
    "state": Object {
      "counter": 3,
    },
  },
  "unique-key-2": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-2",
    },
    "state": Object {
      "fulfilled": true,
      "pending": false,
      "reason": null,
      "refresh": [Function],
      "refreshing": true,
      "rejected": false,
      "value": "2-foo",
    },
  },
  "unique-key-3": Object {
    "meta": Object {
      "ssr": false,
      "ssrKey": "unique-key-3",
    },
    "state": Object {
      "fulfilled": true,
      "pending": false,
      "reason": null,
      "refresh": [Function],
      "refreshing": false,
      "rejected": false,
      "value": "2-foobar",
    },
  },
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 1`] = `
Object {
  "fulfilled": false,
  "pending": true,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": null,
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 2`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo1",
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 3`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": true,
  "rejected": false,
  "value": "foo1",
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 4`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo2",
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 5`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": true,
  "rejected": false,
  "value": "foo2",
}
`;

exports[`should rerun promises when cache expires if \`maxAge\` is set 6`] = `
Object {
  "fulfilled": true,
  "pending": false,
  "reason": null,
  "refresh": [Function],
  "refreshing": false,
  "rejected": false,
  "value": "foo2",
}
`;

exports[`should throw if \`mapPropsToArgs\` updates too often due to a race condition 1`] = `[Error: Priem: the amount of updates of 'AsyncContainer' exceeded the safe threshold, which means it has stuck in an infinite rerendering loop. This happens when 'mapPropsToArgs' returns different results on consecutive calls. For example, this might be caused by a race condition between 2 or more Priem components. Please, fix.]`;

exports[`should throw if \`sources\` is not an object 1`] = `[TypeError: Cannot convert undefined or null to object]`;

exports[`should throw if neither \`children\` nor \`component\` have been passed 1`] = `[TypeError: Priem: <Priem />'s 'children' must be one of the following: 'function', but got: 'null'.]`;
